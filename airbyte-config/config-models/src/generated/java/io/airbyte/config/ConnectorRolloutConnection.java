/*
 * Copyright (c) 2020-2025 Airbyte, Inc., all rights reserved.
 */

package io.airbyte.config;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.annotation.Generated;
import java.io.Serializable;

/**
 * ConnectorRolloutConnection
 * <p>
 * Information about a connection in a connector rollout
 *
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
  "id",
  "workspaceId"
})
@Generated(value = "Generated by jsonSchema2Pojo")
public class ConnectorRolloutConnection implements Serializable {

  /**
   *
   * (Required)
   *
   */
  @JsonProperty("id")
  private String id;
  /**
   *
   * (Required)
   *
   */
  @JsonProperty("workspaceId")
  private String workspaceId;
  private final static long serialVersionUID = -6059212913981818816L;

  /**
   *
   * (Required)
   *
   */
  @JsonProperty("id")
  public String getId() {
    return id;
  }

  /**
   *
   * (Required)
   *
   */
  @JsonProperty("id")
  public void setId(String id) {
    this.id = id;
  }

  public ConnectorRolloutConnection withId(String id) {
    this.id = id;
    return this;
  }

  /**
   *
   * (Required)
   *
   */
  @JsonProperty("workspaceId")
  public String getWorkspaceId() {
    return workspaceId;
  }

  /**
   *
   * (Required)
   *
   */
  @JsonProperty("workspaceId")
  public void setWorkspaceId(String workspaceId) {
    this.workspaceId = workspaceId;
  }

  public ConnectorRolloutConnection withWorkspaceId(String workspaceId) {
    this.workspaceId = workspaceId;
    return this;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append(ConnectorRolloutConnection.class.getName()).append('@').append(Integer.toHexString(System.identityHashCode(this))).append('[');
    sb.append("id");
    sb.append('=');
    sb.append(((this.id == null) ? "<null>" : this.id));
    sb.append(',');
    sb.append("workspaceId");
    sb.append('=');
    sb.append(((this.workspaceId == null) ? "<null>" : this.workspaceId));
    sb.append(',');
    if (sb.charAt((sb.length() - 1)) == ',') {
      sb.setCharAt((sb.length() - 1), ']');
    } else {
      sb.append(']');
    }
    return sb.toString();
  }

  @Override
  public int hashCode() {
    int result = 1;
    result = ((result * 31) + ((this.id == null) ? 0 : this.id.hashCode()));
    result = ((result * 31) + ((this.workspaceId == null) ? 0 : this.workspaceId.hashCode()));
    return result;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) {
      return true;
    }
    if ((other instanceof ConnectorRolloutConnection) == false) {
      return false;
    }
    ConnectorRolloutConnection rhs = ((ConnectorRolloutConnection) other);
    return (((this.id == rhs.id) || ((this.id != null) && this.id.equals(rhs.id)))
        && ((this.workspaceId == rhs.workspaceId) || ((this.workspaceId != null) && this.workspaceId.equals(rhs.workspaceId))));
  }

}
