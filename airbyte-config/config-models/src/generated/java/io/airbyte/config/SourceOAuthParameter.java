/*
 * Copyright (c) 2020-2025 Airbyte, Inc., all rights reserved.
 */

package io.airbyte.config;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyDescription;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.databind.JsonNode;
import jakarta.annotation.Generated;
import java.io.Serializable;
import java.util.HashMap;
import java.util.Map;
import java.util.UUID;

/**
 * SourceOAuthParameter
 * <p>
 * OAuth parameters used when connecting to source
 *
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
  "oauthParameterId",
  "sourceDefinitionId",
  "workspaceId",
  "organizationId",
  "configuration"
})
@Generated(value = "Generated by jsonSchema2Pojo")
public class SourceOAuthParameter implements Serializable {

  /**
   *
   * (Required)
   *
   */
  @JsonProperty("oauthParameterId")
  private UUID oauthParameterId;
  /**
   *
   * (Required)
   *
   */
  @JsonProperty("sourceDefinitionId")
  private UUID sourceDefinitionId;
  @JsonProperty("workspaceId")
  private UUID workspaceId;
  @JsonProperty("organizationId")
  private UUID organizationId;
  /**
   * Integration specific blob. Must be a valid JSON string. (Required)
   *
   */
  @JsonProperty("configuration")
  @JsonPropertyDescription("Integration specific blob. Must be a valid JSON string.")
  private JsonNode configuration;
  @JsonIgnore
  private Map<String, Object> additionalProperties = new HashMap<String, Object>();
  private final static long serialVersionUID = 7166380341839602898L;

  /**
   *
   * (Required)
   *
   */
  @JsonProperty("oauthParameterId")
  public UUID getOauthParameterId() {
    return oauthParameterId;
  }

  /**
   *
   * (Required)
   *
   */
  @JsonProperty("oauthParameterId")
  public void setOauthParameterId(UUID oauthParameterId) {
    this.oauthParameterId = oauthParameterId;
  }

  public SourceOAuthParameter withOauthParameterId(UUID oauthParameterId) {
    this.oauthParameterId = oauthParameterId;
    return this;
  }

  /**
   *
   * (Required)
   *
   */
  @JsonProperty("sourceDefinitionId")
  public UUID getSourceDefinitionId() {
    return sourceDefinitionId;
  }

  /**
   *
   * (Required)
   *
   */
  @JsonProperty("sourceDefinitionId")
  public void setSourceDefinitionId(UUID sourceDefinitionId) {
    this.sourceDefinitionId = sourceDefinitionId;
  }

  public SourceOAuthParameter withSourceDefinitionId(UUID sourceDefinitionId) {
    this.sourceDefinitionId = sourceDefinitionId;
    return this;
  }

  @JsonProperty("workspaceId")
  public UUID getWorkspaceId() {
    return workspaceId;
  }

  @JsonProperty("workspaceId")
  public void setWorkspaceId(UUID workspaceId) {
    this.workspaceId = workspaceId;
  }

  public SourceOAuthParameter withWorkspaceId(UUID workspaceId) {
    this.workspaceId = workspaceId;
    return this;
  }

  @JsonProperty("organizationId")
  public UUID getOrganizationId() {
    return organizationId;
  }

  @JsonProperty("organizationId")
  public void setOrganizationId(UUID organizationId) {
    this.organizationId = organizationId;
  }

  public SourceOAuthParameter withOrganizationId(UUID organizationId) {
    this.organizationId = organizationId;
    return this;
  }

  /**
   * Integration specific blob. Must be a valid JSON string. (Required)
   *
   */
  @JsonProperty("configuration")
  public JsonNode getConfiguration() {
    return configuration;
  }

  /**
   * Integration specific blob. Must be a valid JSON string. (Required)
   *
   */
  @JsonProperty("configuration")
  public void setConfiguration(JsonNode configuration) {
    this.configuration = configuration;
  }

  public SourceOAuthParameter withConfiguration(JsonNode configuration) {
    this.configuration = configuration;
    return this;
  }

  @JsonAnyGetter
  public Map<String, Object> getAdditionalProperties() {
    return this.additionalProperties;
  }

  @JsonAnySetter
  public void setAdditionalProperty(String name, Object value) {
    this.additionalProperties.put(name, value);
  }

  public SourceOAuthParameter withAdditionalProperty(String name, Object value) {
    this.additionalProperties.put(name, value);
    return this;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append(SourceOAuthParameter.class.getName()).append('@').append(Integer.toHexString(System.identityHashCode(this))).append('[');
    sb.append("oauthParameterId");
    sb.append('=');
    sb.append(((this.oauthParameterId == null) ? "<null>" : this.oauthParameterId));
    sb.append(',');
    sb.append("sourceDefinitionId");
    sb.append('=');
    sb.append(((this.sourceDefinitionId == null) ? "<null>" : this.sourceDefinitionId));
    sb.append(',');
    sb.append("workspaceId");
    sb.append('=');
    sb.append(((this.workspaceId == null) ? "<null>" : this.workspaceId));
    sb.append(',');
    sb.append("organizationId");
    sb.append('=');
    sb.append(((this.organizationId == null) ? "<null>" : this.organizationId));
    sb.append(',');
    sb.append("configuration");
    sb.append('=');
    sb.append(((this.configuration == null) ? "<null>" : this.configuration));
    sb.append(',');
    sb.append("additionalProperties");
    sb.append('=');
    sb.append(((this.additionalProperties == null) ? "<null>" : this.additionalProperties));
    sb.append(',');
    if (sb.charAt((sb.length() - 1)) == ',') {
      sb.setCharAt((sb.length() - 1), ']');
    } else {
      sb.append(']');
    }
    return sb.toString();
  }

  @Override
  public int hashCode() {
    int result = 1;
    result = ((result * 31) + ((this.organizationId == null) ? 0 : this.organizationId.hashCode()));
    result = ((result * 31) + ((this.sourceDefinitionId == null) ? 0 : this.sourceDefinitionId.hashCode()));
    result = ((result * 31) + ((this.additionalProperties == null) ? 0 : this.additionalProperties.hashCode()));
    result = ((result * 31) + ((this.configuration == null) ? 0 : this.configuration.hashCode()));
    result = ((result * 31) + ((this.oauthParameterId == null) ? 0 : this.oauthParameterId.hashCode()));
    result = ((result * 31) + ((this.workspaceId == null) ? 0 : this.workspaceId.hashCode()));
    return result;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) {
      return true;
    }
    if ((other instanceof SourceOAuthParameter) == false) {
      return false;
    }
    SourceOAuthParameter rhs = ((SourceOAuthParameter) other);
    return (((((((this.organizationId == rhs.organizationId) || ((this.organizationId != null) && this.organizationId.equals(rhs.organizationId)))
        && ((this.sourceDefinitionId == rhs.sourceDefinitionId)
            || ((this.sourceDefinitionId != null) && this.sourceDefinitionId.equals(rhs.sourceDefinitionId))))
        && ((this.additionalProperties == rhs.additionalProperties)
            || ((this.additionalProperties != null) && this.additionalProperties.equals(rhs.additionalProperties))))
        && ((this.configuration == rhs.configuration) || ((this.configuration != null) && this.configuration.equals(rhs.configuration))))
        && ((this.oauthParameterId == rhs.oauthParameterId)
            || ((this.oauthParameterId != null) && this.oauthParameterId.equals(rhs.oauthParameterId))))
        && ((this.workspaceId == rhs.workspaceId) || ((this.workspaceId != null) && this.workspaceId.equals(rhs.workspaceId))));
  }

}
