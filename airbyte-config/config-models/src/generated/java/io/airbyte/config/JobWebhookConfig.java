/*
 * Copyright (c) 2020-2025 Airbyte, Inc., all rights reserved.
 */

package io.airbyte.config;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyDescription;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.databind.JsonNode;
import jakarta.annotation.Generated;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * JobSyncConfig
 * <p>
 * job sync config
 *
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
  "operationSequence",
  "webhookOperationConfigs"
})
@Generated(value = "Generated by jsonSchema2Pojo")
public class JobWebhookConfig implements Serializable {

  /**
   * Sequence of configurations of operations to apply as part of the sync
   *
   */
  @JsonProperty("operationSequence")
  @JsonPropertyDescription("Sequence of configurations of operations to apply as part of the sync")
  private List<StandardSyncOperation> operationSequence = new ArrayList<StandardSyncOperation>();
  /**
   * The webhook operation configs belonging to this workspace. Must conform to
   * WebhookOperationConfigs.yaml.
   *
   */
  @JsonProperty("webhookOperationConfigs")
  @JsonPropertyDescription("The webhook operation configs belonging to this workspace. Must conform to WebhookOperationConfigs.yaml.")
  private JsonNode webhookOperationConfigs;
  @JsonIgnore
  private Map<String, Object> additionalProperties = new HashMap<String, Object>();
  private final static long serialVersionUID = 7743745948467862087L;

  /**
   * Sequence of configurations of operations to apply as part of the sync
   *
   */
  @JsonProperty("operationSequence")
  public List<StandardSyncOperation> getOperationSequence() {
    return operationSequence;
  }

  /**
   * Sequence of configurations of operations to apply as part of the sync
   *
   */
  @JsonProperty("operationSequence")
  public void setOperationSequence(List<StandardSyncOperation> operationSequence) {
    this.operationSequence = operationSequence;
  }

  public JobWebhookConfig withOperationSequence(List<StandardSyncOperation> operationSequence) {
    this.operationSequence = operationSequence;
    return this;
  }

  /**
   * The webhook operation configs belonging to this workspace. Must conform to
   * WebhookOperationConfigs.yaml.
   *
   */
  @JsonProperty("webhookOperationConfigs")
  public JsonNode getWebhookOperationConfigs() {
    return webhookOperationConfigs;
  }

  /**
   * The webhook operation configs belonging to this workspace. Must conform to
   * WebhookOperationConfigs.yaml.
   *
   */
  @JsonProperty("webhookOperationConfigs")
  public void setWebhookOperationConfigs(JsonNode webhookOperationConfigs) {
    this.webhookOperationConfigs = webhookOperationConfigs;
  }

  public JobWebhookConfig withWebhookOperationConfigs(JsonNode webhookOperationConfigs) {
    this.webhookOperationConfigs = webhookOperationConfigs;
    return this;
  }

  @JsonAnyGetter
  public Map<String, Object> getAdditionalProperties() {
    return this.additionalProperties;
  }

  @JsonAnySetter
  public void setAdditionalProperty(String name, Object value) {
    this.additionalProperties.put(name, value);
  }

  public JobWebhookConfig withAdditionalProperty(String name, Object value) {
    this.additionalProperties.put(name, value);
    return this;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append(JobWebhookConfig.class.getName()).append('@').append(Integer.toHexString(System.identityHashCode(this))).append('[');
    sb.append("operationSequence");
    sb.append('=');
    sb.append(((this.operationSequence == null) ? "<null>" : this.operationSequence));
    sb.append(',');
    sb.append("webhookOperationConfigs");
    sb.append('=');
    sb.append(((this.webhookOperationConfigs == null) ? "<null>" : this.webhookOperationConfigs));
    sb.append(',');
    sb.append("additionalProperties");
    sb.append('=');
    sb.append(((this.additionalProperties == null) ? "<null>" : this.additionalProperties));
    sb.append(',');
    if (sb.charAt((sb.length() - 1)) == ',') {
      sb.setCharAt((sb.length() - 1), ']');
    } else {
      sb.append(']');
    }
    return sb.toString();
  }

  @Override
  public int hashCode() {
    int result = 1;
    result = ((result * 31) + ((this.webhookOperationConfigs == null) ? 0 : this.webhookOperationConfigs.hashCode()));
    result = ((result * 31) + ((this.operationSequence == null) ? 0 : this.operationSequence.hashCode()));
    result = ((result * 31) + ((this.additionalProperties == null) ? 0 : this.additionalProperties.hashCode()));
    return result;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) {
      return true;
    }
    if ((other instanceof JobWebhookConfig) == false) {
      return false;
    }
    JobWebhookConfig rhs = ((JobWebhookConfig) other);
    return ((((this.webhookOperationConfigs == rhs.webhookOperationConfigs)
        || ((this.webhookOperationConfigs != null) && this.webhookOperationConfigs.equals(rhs.webhookOperationConfigs)))
        && ((this.operationSequence == rhs.operationSequence)
            || ((this.operationSequence != null) && this.operationSequence.equals(rhs.operationSequence))))
        && ((this.additionalProperties == rhs.additionalProperties)
            || ((this.additionalProperties != null) && this.additionalProperties.equals(rhs.additionalProperties))));
  }

}
