/*
 * Copyright (c) 2020-2025 Airbyte, Inc., all rights reserved.
 */

package io.airbyte.config;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyDescription;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.annotation.Generated;
import java.io.Serializable;
import java.util.HashMap;
import java.util.Map;
import java.util.UUID;

/**
 * SecretPersistenceCoordinate
 * <p>
 * A configuration object used to instantiate a SecretPersistence object at runtime pre config
 * hydration.
 *
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
  "scopeId",
  "scopeType",
  "secretPersistenceType",
  "coordinate"
})
@Generated(value = "Generated by jsonSchema2Pojo")
public class SecretPersistenceCoordinate implements Serializable {

  /**
   * The resource ID tied to this secret persistence configuration. (Required)
   *
   */
  @JsonProperty("scopeId")
  @JsonPropertyDescription("The resource ID tied to this secret persistence configuration.")
  private UUID scopeId;
  /**
   * ScopeType
   * <p>
   * Scope type of resource id (Required)
   *
   */
  @JsonProperty("scopeType")
  @JsonPropertyDescription("Scope type of resource id")
  private ScopeType scopeType;
  /**
   * SecretPersistenceType
   * <p>
   * enum that describes different types of secret persistence (Required)
   *
   */
  @JsonProperty("secretPersistenceType")
  @JsonPropertyDescription("enum that describes different types of secret persistence")
  private SecretPersistenceConfig.SecretPersistenceType secretPersistenceType;
  /**
   * The coordinate of the secret to be retrieved. (Required)
   *
   */
  @JsonProperty("coordinate")
  @JsonPropertyDescription("The coordinate of the secret to be retrieved.")
  private String coordinate;
  @JsonIgnore
  private Map<String, Object> additionalProperties = new HashMap<String, Object>();
  private final static long serialVersionUID = 2233041605989769054L;

  /**
   * The resource ID tied to this secret persistence configuration. (Required)
   *
   */
  @JsonProperty("scopeId")
  public UUID getScopeId() {
    return scopeId;
  }

  /**
   * The resource ID tied to this secret persistence configuration. (Required)
   *
   */
  @JsonProperty("scopeId")
  public void setScopeId(UUID scopeId) {
    this.scopeId = scopeId;
  }

  public SecretPersistenceCoordinate withScopeId(UUID scopeId) {
    this.scopeId = scopeId;
    return this;
  }

  /**
   * ScopeType
   * <p>
   * Scope type of resource id (Required)
   *
   */
  @JsonProperty("scopeType")
  public ScopeType getScopeType() {
    return scopeType;
  }

  /**
   * ScopeType
   * <p>
   * Scope type of resource id (Required)
   *
   */
  @JsonProperty("scopeType")
  public void setScopeType(ScopeType scopeType) {
    this.scopeType = scopeType;
  }

  public SecretPersistenceCoordinate withScopeType(ScopeType scopeType) {
    this.scopeType = scopeType;
    return this;
  }

  /**
   * SecretPersistenceType
   * <p>
   * enum that describes different types of secret persistence (Required)
   *
   */
  @JsonProperty("secretPersistenceType")
  public SecretPersistenceConfig.SecretPersistenceType getSecretPersistenceType() {
    return secretPersistenceType;
  }

  /**
   * SecretPersistenceType
   * <p>
   * enum that describes different types of secret persistence (Required)
   *
   */
  @JsonProperty("secretPersistenceType")
  public void setSecretPersistenceType(SecretPersistenceConfig.SecretPersistenceType secretPersistenceType) {
    this.secretPersistenceType = secretPersistenceType;
  }

  public SecretPersistenceCoordinate withSecretPersistenceType(SecretPersistenceConfig.SecretPersistenceType secretPersistenceType) {
    this.secretPersistenceType = secretPersistenceType;
    return this;
  }

  /**
   * The coordinate of the secret to be retrieved. (Required)
   *
   */
  @JsonProperty("coordinate")
  public String getCoordinate() {
    return coordinate;
  }

  /**
   * The coordinate of the secret to be retrieved. (Required)
   *
   */
  @JsonProperty("coordinate")
  public void setCoordinate(String coordinate) {
    this.coordinate = coordinate;
  }

  public SecretPersistenceCoordinate withCoordinate(String coordinate) {
    this.coordinate = coordinate;
    return this;
  }

  @JsonAnyGetter
  public Map<String, Object> getAdditionalProperties() {
    return this.additionalProperties;
  }

  @JsonAnySetter
  public void setAdditionalProperty(String name, Object value) {
    this.additionalProperties.put(name, value);
  }

  public SecretPersistenceCoordinate withAdditionalProperty(String name, Object value) {
    this.additionalProperties.put(name, value);
    return this;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append(SecretPersistenceCoordinate.class.getName()).append('@').append(Integer.toHexString(System.identityHashCode(this))).append('[');
    sb.append("scopeId");
    sb.append('=');
    sb.append(((this.scopeId == null) ? "<null>" : this.scopeId));
    sb.append(',');
    sb.append("scopeType");
    sb.append('=');
    sb.append(((this.scopeType == null) ? "<null>" : this.scopeType));
    sb.append(',');
    sb.append("secretPersistenceType");
    sb.append('=');
    sb.append(((this.secretPersistenceType == null) ? "<null>" : this.secretPersistenceType));
    sb.append(',');
    sb.append("coordinate");
    sb.append('=');
    sb.append(((this.coordinate == null) ? "<null>" : this.coordinate));
    sb.append(',');
    sb.append("additionalProperties");
    sb.append('=');
    sb.append(((this.additionalProperties == null) ? "<null>" : this.additionalProperties));
    sb.append(',');
    if (sb.charAt((sb.length() - 1)) == ',') {
      sb.setCharAt((sb.length() - 1), ']');
    } else {
      sb.append(']');
    }
    return sb.toString();
  }

  @Override
  public int hashCode() {
    int result = 1;
    result = ((result * 31) + ((this.secretPersistenceType == null) ? 0 : this.secretPersistenceType.hashCode()));
    result = ((result * 31) + ((this.scopeId == null) ? 0 : this.scopeId.hashCode()));
    result = ((result * 31) + ((this.coordinate == null) ? 0 : this.coordinate.hashCode()));
    result = ((result * 31) + ((this.additionalProperties == null) ? 0 : this.additionalProperties.hashCode()));
    result = ((result * 31) + ((this.scopeType == null) ? 0 : this.scopeType.hashCode()));
    return result;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) {
      return true;
    }
    if ((other instanceof SecretPersistenceCoordinate) == false) {
      return false;
    }
    SecretPersistenceCoordinate rhs = ((SecretPersistenceCoordinate) other);
    return ((((((this.secretPersistenceType == rhs.secretPersistenceType)
        || ((this.secretPersistenceType != null) && this.secretPersistenceType.equals(rhs.secretPersistenceType)))
        && ((this.scopeId == rhs.scopeId) || ((this.scopeId != null) && this.scopeId.equals(rhs.scopeId))))
        && ((this.coordinate == rhs.coordinate) || ((this.coordinate != null) && this.coordinate.equals(rhs.coordinate))))
        && ((this.additionalProperties == rhs.additionalProperties)
            || ((this.additionalProperties != null) && this.additionalProperties.equals(rhs.additionalProperties))))
        && ((this.scopeType == rhs.scopeType) || ((this.scopeType != null) && this.scopeType.equals(rhs.scopeType))));
  }

}
