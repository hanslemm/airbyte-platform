/*
 * Copyright (c) 2020-2025 Airbyte, Inc., all rights reserved.
 */

package io.airbyte.config;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyDescription;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.annotation.Generated;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * NotificationItem
 * <p>
 * Notification Settings for a type of event
 *
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
  "notificationType",
  "slackConfiguration",
  "customerioConfiguration"
})
@Generated(value = "Generated by jsonSchema2Pojo")
public class NotificationItem implements Serializable {

  @JsonProperty("notificationType")
  private List<Notification.NotificationType> notificationType = new ArrayList<Notification.NotificationType>();
  /**
   * SlackNotificationConfiguration
   * <p>
   * Slack Notification Settings
   *
   */
  @JsonProperty("slackConfiguration")
  @JsonPropertyDescription("Slack Notification Settings")
  private SlackNotificationConfiguration slackConfiguration;
  /**
   * CustomerioNotificationConfiguration
   * <p>
   * Customer.io Notification Settings
   *
   */
  @JsonProperty("customerioConfiguration")
  @JsonPropertyDescription("Customer.io Notification Settings")
  private CustomerioNotificationConfiguration customerioConfiguration;
  @JsonIgnore
  private Map<String, Object> additionalProperties = new HashMap<String, Object>();
  private final static long serialVersionUID = 1104780178070732540L;

  @JsonProperty("notificationType")
  public List<Notification.NotificationType> getNotificationType() {
    return notificationType;
  }

  @JsonProperty("notificationType")
  public void setNotificationType(List<Notification.NotificationType> notificationType) {
    this.notificationType = notificationType;
  }

  public NotificationItem withNotificationType(List<Notification.NotificationType> notificationType) {
    this.notificationType = notificationType;
    return this;
  }

  /**
   * SlackNotificationConfiguration
   * <p>
   * Slack Notification Settings
   *
   */
  @JsonProperty("slackConfiguration")
  public SlackNotificationConfiguration getSlackConfiguration() {
    return slackConfiguration;
  }

  /**
   * SlackNotificationConfiguration
   * <p>
   * Slack Notification Settings
   *
   */
  @JsonProperty("slackConfiguration")
  public void setSlackConfiguration(SlackNotificationConfiguration slackConfiguration) {
    this.slackConfiguration = slackConfiguration;
  }

  public NotificationItem withSlackConfiguration(SlackNotificationConfiguration slackConfiguration) {
    this.slackConfiguration = slackConfiguration;
    return this;
  }

  /**
   * CustomerioNotificationConfiguration
   * <p>
   * Customer.io Notification Settings
   *
   */
  @JsonProperty("customerioConfiguration")
  public CustomerioNotificationConfiguration getCustomerioConfiguration() {
    return customerioConfiguration;
  }

  /**
   * CustomerioNotificationConfiguration
   * <p>
   * Customer.io Notification Settings
   *
   */
  @JsonProperty("customerioConfiguration")
  public void setCustomerioConfiguration(CustomerioNotificationConfiguration customerioConfiguration) {
    this.customerioConfiguration = customerioConfiguration;
  }

  public NotificationItem withCustomerioConfiguration(CustomerioNotificationConfiguration customerioConfiguration) {
    this.customerioConfiguration = customerioConfiguration;
    return this;
  }

  @JsonAnyGetter
  public Map<String, Object> getAdditionalProperties() {
    return this.additionalProperties;
  }

  @JsonAnySetter
  public void setAdditionalProperty(String name, Object value) {
    this.additionalProperties.put(name, value);
  }

  public NotificationItem withAdditionalProperty(String name, Object value) {
    this.additionalProperties.put(name, value);
    return this;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append(NotificationItem.class.getName()).append('@').append(Integer.toHexString(System.identityHashCode(this))).append('[');
    sb.append("notificationType");
    sb.append('=');
    sb.append(((this.notificationType == null) ? "<null>" : this.notificationType));
    sb.append(',');
    sb.append("slackConfiguration");
    sb.append('=');
    sb.append(((this.slackConfiguration == null) ? "<null>" : this.slackConfiguration));
    sb.append(',');
    sb.append("customerioConfiguration");
    sb.append('=');
    sb.append(((this.customerioConfiguration == null) ? "<null>" : this.customerioConfiguration));
    sb.append(',');
    sb.append("additionalProperties");
    sb.append('=');
    sb.append(((this.additionalProperties == null) ? "<null>" : this.additionalProperties));
    sb.append(',');
    if (sb.charAt((sb.length() - 1)) == ',') {
      sb.setCharAt((sb.length() - 1), ']');
    } else {
      sb.append(']');
    }
    return sb.toString();
  }

  @Override
  public int hashCode() {
    int result = 1;
    result = ((result * 31) + ((this.customerioConfiguration == null) ? 0 : this.customerioConfiguration.hashCode()));
    result = ((result * 31) + ((this.slackConfiguration == null) ? 0 : this.slackConfiguration.hashCode()));
    result = ((result * 31) + ((this.notificationType == null) ? 0 : this.notificationType.hashCode()));
    result = ((result * 31) + ((this.additionalProperties == null) ? 0 : this.additionalProperties.hashCode()));
    return result;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) {
      return true;
    }
    if ((other instanceof NotificationItem) == false) {
      return false;
    }
    NotificationItem rhs = ((NotificationItem) other);
    return (((((this.customerioConfiguration == rhs.customerioConfiguration)
        || ((this.customerioConfiguration != null) && this.customerioConfiguration.equals(rhs.customerioConfiguration)))
        && ((this.slackConfiguration == rhs.slackConfiguration)
            || ((this.slackConfiguration != null) && this.slackConfiguration.equals(rhs.slackConfiguration))))
        && ((this.notificationType == rhs.notificationType)
            || ((this.notificationType != null) && this.notificationType.equals(rhs.notificationType))))
        && ((this.additionalProperties == rhs.additionalProperties)
            || ((this.additionalProperties != null) && this.additionalProperties.equals(rhs.additionalProperties))));
  }

}
