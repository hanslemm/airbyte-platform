/*
 * Copyright (c) 2020-2025 Airbyte, Inc., all rights reserved.
 */

package io.airbyte.config;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyDescription;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.databind.JsonNode;
import jakarta.annotation.Generated;
import java.io.Serializable;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.UUID;

/**
 * DestinationConnection
 * <p>
 * information required for connection to a destination.
 *
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
  "name",
  "destinationDefinitionId",
  "workspaceId",
  "destinationId",
  "configuration",
  "tombstone",
  "createdAt",
  "updatedAt",
  "resourceRequirements"
})
@Generated(value = "Generated by jsonSchema2Pojo")
public class DestinationConnection implements Serializable {

  /**
   *
   * (Required)
   *
   */
  @JsonProperty("name")
  private String name;
  /**
   *
   * (Required)
   *
   */
  @JsonProperty("destinationDefinitionId")
  private UUID destinationDefinitionId;
  /**
   *
   * (Required)
   *
   */
  @JsonProperty("workspaceId")
  private UUID workspaceId;
  /**
   *
   * (Required)
   *
   */
  @JsonProperty("destinationId")
  private UUID destinationId;
  /**
   * Integration specific blob. Must be a valid JSON string. (Required)
   *
   */
  @JsonProperty("configuration")
  @JsonPropertyDescription("Integration specific blob. Must be a valid JSON string.")
  private JsonNode configuration;
  /**
   * if not set or false, the configuration is active. if true, then this configuration is permanently
   * off. (Required)
   *
   */
  @JsonProperty("tombstone")
  @JsonPropertyDescription("if not set or false, the configuration is active. if true, then this configuration is permanently off.")
  private Boolean tombstone;
  /**
   *
   * (Required)
   *
   */
  @JsonProperty("createdAt")
  private Long createdAt;
  @JsonProperty("updatedAt")
  private Long updatedAt;
  /**
   * ScopedResourceRequirements
   * <p>
   * actor or actor definition specific resource requirements
   *
   */
  @JsonProperty("resourceRequirements")
  @JsonPropertyDescription("actor or actor definition specific resource requirements")
  private ScopedResourceRequirements resourceRequirements;
  @JsonIgnore
  private final Map<String, Object> additionalProperties = new HashMap<>();
  private final static long serialVersionUID = 37500060750466373L;

  /**
   *
   * (Required)
   *
   */
  @JsonProperty("name")
  public String getName() {
    return name;
  }

  /**
   *
   * (Required)
   *
   */
  @JsonProperty("name")
  public void setName(String name) {
    this.name = name;
  }

  public DestinationConnection withName(String name) {
    this.name = name;
    return this;
  }

  /**
   *
   * (Required)
   *
   */
  @JsonProperty("destinationDefinitionId")
  public UUID getDestinationDefinitionId() {
    return destinationDefinitionId;
  }

  /**
   *
   * (Required)
   *
   */
  @JsonProperty("destinationDefinitionId")
  public void setDestinationDefinitionId(UUID destinationDefinitionId) {
    this.destinationDefinitionId = destinationDefinitionId;
  }

  public DestinationConnection withDestinationDefinitionId(UUID destinationDefinitionId) {
    this.destinationDefinitionId = destinationDefinitionId;
    return this;
  }

  /**
   *
   * (Required)
   *
   */
  @JsonProperty("workspaceId")
  public UUID getWorkspaceId() {
    return workspaceId;
  }

  /**
   *
   * (Required)
   *
   */
  @JsonProperty("workspaceId")
  public void setWorkspaceId(UUID workspaceId) {
    this.workspaceId = workspaceId;
  }

  public DestinationConnection withWorkspaceId(UUID workspaceId) {
    this.workspaceId = workspaceId;
    return this;
  }

  /**
   *
   * (Required)
   *
   */
  @JsonProperty("destinationId")
  public UUID getDestinationId() {
    return destinationId;
  }

  /**
   *
   * (Required)
   *
   */
  @JsonProperty("destinationId")
  public void setDestinationId(UUID destinationId) {
    this.destinationId = destinationId;
  }

  public DestinationConnection withDestinationId(UUID destinationId) {
    this.destinationId = destinationId;
    return this;
  }

  /**
   * Integration specific blob. Must be a valid JSON string. (Required)
   *
   */
  @JsonProperty("configuration")
  public JsonNode getConfiguration() {
    return configuration;
  }

  /**
   * Integration specific blob. Must be a valid JSON string. (Required)
   *
   */
  @JsonProperty("configuration")
  public void setConfiguration(JsonNode configuration) {
    this.configuration = configuration;
  }

  public DestinationConnection withConfiguration(JsonNode configuration) {
    this.configuration = configuration;
    return this;
  }

  /**
   * if not set or false, the configuration is active. if true, then this configuration is permanently
   * off. (Required)
   *
   */
  @JsonProperty("tombstone")
  public Boolean getTombstone() {
    return tombstone;
  }

  /**
   * if not set or false, the configuration is active. if true, then this configuration is permanently
   * off. (Required)
   *
   */
  @JsonProperty("tombstone")
  public void setTombstone(Boolean tombstone) {
    this.tombstone = tombstone;
  }

  public DestinationConnection withTombstone(Boolean tombstone) {
    this.tombstone = tombstone;
    return this;
  }

  /**
   *
   * (Required)
   *
   */
  @JsonProperty("createdAt")
  public Long getCreatedAt() {
    return createdAt;
  }

  /**
   *
   * (Required)
   *
   */
  @JsonProperty("createdAt")
  public void setCreatedAt(Long createdAt) {
    this.createdAt = createdAt;
  }

  public DestinationConnection withCreatedAt(Long createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  @JsonProperty("updatedAt")
  public Long getUpdatedAt() {
    return updatedAt;
  }

  @JsonProperty("updatedAt")
  public void setUpdatedAt(Long updatedAt) {
    this.updatedAt = updatedAt;
  }

  public DestinationConnection withUpdatedAt(Long updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * ScopedResourceRequirements
   * <p>
   * actor or actor definition specific resource requirements
   *
   */
  @JsonProperty("resourceRequirements")
  public ScopedResourceRequirements getResourceRequirements() {
    return resourceRequirements;
  }

  /**
   * ScopedResourceRequirements
   * <p>
   * actor or actor definition specific resource requirements
   *
   */
  @JsonProperty("resourceRequirements")
  public void setResourceRequirements(ScopedResourceRequirements resourceRequirements) {
    this.resourceRequirements = resourceRequirements;
  }

  public DestinationConnection withResourceRequirements(ScopedResourceRequirements resourceRequirements) {
    this.resourceRequirements = resourceRequirements;
    return this;
  }

  @JsonAnyGetter
  public Map<String, Object> getAdditionalProperties() {
    return this.additionalProperties;
  }

  @JsonAnySetter
  public void setAdditionalProperty(String name, Object value) {
    this.additionalProperties.put(name, value);
  }

  public DestinationConnection withAdditionalProperty(String name, Object value) {
    this.additionalProperties.put(name, value);
    return this;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append(DestinationConnection.class.getName()).append('@').append(Integer.toHexString(System.identityHashCode(this))).append('[');
    sb.append("name");
    sb.append('=');
    sb.append(((this.name == null) ? "<null>" : this.name));
    sb.append(',');
    sb.append("destinationDefinitionId");
    sb.append('=');
    sb.append(((this.destinationDefinitionId == null) ? "<null>" : this.destinationDefinitionId));
    sb.append(',');
    sb.append("workspaceId");
    sb.append('=');
    sb.append(((this.workspaceId == null) ? "<null>" : this.workspaceId));
    sb.append(',');
    sb.append("destinationId");
    sb.append('=');
    sb.append(((this.destinationId == null) ? "<null>" : this.destinationId));
    sb.append(',');
    sb.append("configuration");
    sb.append('=');
    sb.append(((this.configuration == null) ? "<null>" : this.configuration));
    sb.append(',');
    sb.append("tombstone");
    sb.append('=');
    sb.append(((this.tombstone == null) ? "<null>" : this.tombstone));
    sb.append(',');
    sb.append("createdAt");
    sb.append('=');
    sb.append(((this.createdAt == null) ? "<null>" : this.createdAt));
    sb.append(',');
    sb.append("updatedAt");
    sb.append('=');
    sb.append(((this.updatedAt == null) ? "<null>" : this.updatedAt));
    sb.append(',');
    sb.append("resourceRequirements");
    sb.append('=');
    sb.append(((this.resourceRequirements == null) ? "<null>" : this.resourceRequirements));
    sb.append(',');
    sb.append("additionalProperties");
    sb.append('=');
    sb.append(this.additionalProperties);
    sb.append(',');
    if (sb.charAt((sb.length() - 1)) == ',') {
      sb.setCharAt((sb.length() - 1), ']');
    } else {
      sb.append(']');
    }
    return sb.toString();
  }

  @Override
  public int hashCode() {
    int result = 1;
    result = ((result * 31) + ((this.resourceRequirements == null) ? 0 : this.resourceRequirements.hashCode()));
    result = ((result * 31) + ((this.createdAt == null) ? 0 : this.createdAt.hashCode()));
    result = ((result * 31) + ((this.tombstone == null) ? 0 : this.tombstone.hashCode()));
    result = ((result * 31) + ((this.configuration == null) ? 0 : this.configuration.hashCode()));
    result = ((result * 31) + ((this.name == null) ? 0 : this.name.hashCode()));
    result = ((result * 31) + ((this.destinationDefinitionId == null) ? 0 : this.destinationDefinitionId.hashCode()));
    result = result * 31 + this.additionalProperties.hashCode();
    result = ((result * 31) + ((this.destinationId == null) ? 0 : this.destinationId.hashCode()));
    result = ((result * 31) + ((this.workspaceId == null) ? 0 : this.workspaceId.hashCode()));
    result = ((result * 31) + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode()));
    return result;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) {
      return true;
    }
    if (!(other instanceof DestinationConnection rhs)) {
      return false;
    }
    return Objects.equals(this.resourceRequirements, rhs.resourceRequirements) && Objects.equals(this.createdAt, rhs.createdAt)
        && Objects.equals(this.tombstone, rhs.tombstone) && Objects.equals(this.configuration, rhs.configuration)
        && Objects.equals(this.name, rhs.name) && Objects.equals(this.destinationDefinitionId, rhs.destinationDefinitionId)
        && Objects.equals(this.additionalProperties, rhs.additionalProperties) && Objects.equals(this.destinationId, rhs.destinationId)
        && Objects.equals(this.workspaceId, rhs.workspaceId) && Objects.equals(this.updatedAt, rhs.updatedAt);
  }

}
