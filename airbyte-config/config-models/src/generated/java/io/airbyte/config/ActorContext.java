/*
 * Copyright (c) 2020-2025 Airbyte, Inc., all rights reserved.
 */

package io.airbyte.config;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyDescription;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.annotation.Generated;
import java.io.Serializable;
import java.util.HashMap;
import java.util.Map;
import java.util.UUID;

/**
 * ActorContext
 * <p>
 * Actor context to be passed to a temporal workflow and its activities/child workflows.
 *
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
  "actorType",
  "actorId",
  "actorDefinitionId",
  "workspaceId",
  "organizationId"
})
@Generated(value = "Generated by jsonSchema2Pojo")
public class ActorContext implements Serializable {

  @JsonProperty("actorType")
  private ActorType actorType;
  /**
   * The ID of the relevant actor.
   *
   */
  @JsonProperty("actorId")
  @JsonPropertyDescription("The ID of the relevant actor.")
  private UUID actorId;
  /**
   * The ID of the relevant actor definition.
   *
   */
  @JsonProperty("actorDefinitionId")
  @JsonPropertyDescription("The ID of the relevant actor definition.")
  private UUID actorDefinitionId;
  /**
   * The ID of the workspace related to this workflow
   *
   */
  @JsonProperty("workspaceId")
  @JsonPropertyDescription("The ID of the workspace related to this workflow")
  private UUID workspaceId;
  /**
   * The ID of the organization related to this workflow
   *
   */
  @JsonProperty("organizationId")
  @JsonPropertyDescription("The ID of the organization related to this workflow")
  private UUID organizationId;
  @JsonIgnore
  private Map<String, Object> additionalProperties = new HashMap<String, Object>();
  private final static long serialVersionUID = 7579024136805298664L;

  @JsonProperty("actorType")
  public ActorType getActorType() {
    return actorType;
  }

  @JsonProperty("actorType")
  public void setActorType(ActorType actorType) {
    this.actorType = actorType;
  }

  public ActorContext withActorType(ActorType actorType) {
    this.actorType = actorType;
    return this;
  }

  /**
   * The ID of the relevant actor.
   *
   */
  @JsonProperty("actorId")
  public UUID getActorId() {
    return actorId;
  }

  /**
   * The ID of the relevant actor.
   *
   */
  @JsonProperty("actorId")
  public void setActorId(UUID actorId) {
    this.actorId = actorId;
  }

  public ActorContext withActorId(UUID actorId) {
    this.actorId = actorId;
    return this;
  }

  /**
   * The ID of the relevant actor definition.
   *
   */
  @JsonProperty("actorDefinitionId")
  public UUID getActorDefinitionId() {
    return actorDefinitionId;
  }

  /**
   * The ID of the relevant actor definition.
   *
   */
  @JsonProperty("actorDefinitionId")
  public void setActorDefinitionId(UUID actorDefinitionId) {
    this.actorDefinitionId = actorDefinitionId;
  }

  public ActorContext withActorDefinitionId(UUID actorDefinitionId) {
    this.actorDefinitionId = actorDefinitionId;
    return this;
  }

  /**
   * The ID of the workspace related to this workflow
   *
   */
  @JsonProperty("workspaceId")
  public UUID getWorkspaceId() {
    return workspaceId;
  }

  /**
   * The ID of the workspace related to this workflow
   *
   */
  @JsonProperty("workspaceId")
  public void setWorkspaceId(UUID workspaceId) {
    this.workspaceId = workspaceId;
  }

  public ActorContext withWorkspaceId(UUID workspaceId) {
    this.workspaceId = workspaceId;
    return this;
  }

  /**
   * The ID of the organization related to this workflow
   *
   */
  @JsonProperty("organizationId")
  public UUID getOrganizationId() {
    return organizationId;
  }

  /**
   * The ID of the organization related to this workflow
   *
   */
  @JsonProperty("organizationId")
  public void setOrganizationId(UUID organizationId) {
    this.organizationId = organizationId;
  }

  public ActorContext withOrganizationId(UUID organizationId) {
    this.organizationId = organizationId;
    return this;
  }

  @JsonAnyGetter
  public Map<String, Object> getAdditionalProperties() {
    return this.additionalProperties;
  }

  @JsonAnySetter
  public void setAdditionalProperty(String name, Object value) {
    this.additionalProperties.put(name, value);
  }

  public ActorContext withAdditionalProperty(String name, Object value) {
    this.additionalProperties.put(name, value);
    return this;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append(ActorContext.class.getName()).append('@').append(Integer.toHexString(System.identityHashCode(this))).append('[');
    sb.append("actorType");
    sb.append('=');
    sb.append(((this.actorType == null) ? "<null>" : this.actorType));
    sb.append(',');
    sb.append("actorId");
    sb.append('=');
    sb.append(((this.actorId == null) ? "<null>" : this.actorId));
    sb.append(',');
    sb.append("actorDefinitionId");
    sb.append('=');
    sb.append(((this.actorDefinitionId == null) ? "<null>" : this.actorDefinitionId));
    sb.append(',');
    sb.append("workspaceId");
    sb.append('=');
    sb.append(((this.workspaceId == null) ? "<null>" : this.workspaceId));
    sb.append(',');
    sb.append("organizationId");
    sb.append('=');
    sb.append(((this.organizationId == null) ? "<null>" : this.organizationId));
    sb.append(',');
    sb.append("additionalProperties");
    sb.append('=');
    sb.append(((this.additionalProperties == null) ? "<null>" : this.additionalProperties));
    sb.append(',');
    if (sb.charAt((sb.length() - 1)) == ',') {
      sb.setCharAt((sb.length() - 1), ']');
    } else {
      sb.append(']');
    }
    return sb.toString();
  }

  @Override
  public int hashCode() {
    int result = 1;
    result = ((result * 31) + ((this.organizationId == null) ? 0 : this.organizationId.hashCode()));
    result = ((result * 31) + ((this.actorType == null) ? 0 : this.actorType.hashCode()));
    result = ((result * 31) + ((this.actorDefinitionId == null) ? 0 : this.actorDefinitionId.hashCode()));
    result = ((result * 31) + ((this.actorId == null) ? 0 : this.actorId.hashCode()));
    result = ((result * 31) + ((this.additionalProperties == null) ? 0 : this.additionalProperties.hashCode()));
    result = ((result * 31) + ((this.workspaceId == null) ? 0 : this.workspaceId.hashCode()));
    return result;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) {
      return true;
    }
    if ((other instanceof ActorContext) == false) {
      return false;
    }
    ActorContext rhs = ((ActorContext) other);
    return (((((((this.organizationId == rhs.organizationId) || ((this.organizationId != null) && this.organizationId.equals(rhs.organizationId)))
        && ((this.actorType == rhs.actorType) || ((this.actorType != null) && this.actorType.equals(rhs.actorType))))
        && ((this.actorDefinitionId == rhs.actorDefinitionId)
            || ((this.actorDefinitionId != null) && this.actorDefinitionId.equals(rhs.actorDefinitionId))))
        && ((this.actorId == rhs.actorId) || ((this.actorId != null) && this.actorId.equals(rhs.actorId))))
        && ((this.additionalProperties == rhs.additionalProperties)
            || ((this.additionalProperties != null) && this.additionalProperties.equals(rhs.additionalProperties))))
        && ((this.workspaceId == rhs.workspaceId) || ((this.workspaceId != null) && this.workspaceId.equals(rhs.workspaceId))));
  }

}
