/*
 * Copyright (c) 2020-2025 Airbyte, Inc., all rights reserved.
 */

package io.airbyte.config;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyDescription;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.annotation.Generated;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * StandardSyncOutput
 * <p>
 * job sync config
 *
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
  "standardSyncSummary",
  "webhookOperationSummary",
  "failures",
  "catalogUri"
})
@Generated(value = "Generated by jsonSchema2Pojo")
public class StandardSyncOutput implements Serializable {

  /**
   * StandardSyncSummary
   * <p>
   * standard information output by ALL sources for a sync step (our version of state.json) (Required)
   *
   */
  @JsonProperty("standardSyncSummary")
  @JsonPropertyDescription("standard information output by ALL sources for a sync step (our version of state.json)")
  private StandardSyncSummary standardSyncSummary;
  /**
   * WebhookOperationSummary
   * <p>
   * information output by syncs for which at least one webhook invocation step was performed
   *
   */
  @JsonProperty("webhookOperationSummary")
  @JsonPropertyDescription("information output by syncs for which at least one webhook invocation step was performed")
  private WebhookOperationSummary webhookOperationSummary;
  @JsonProperty("failures")
  private List<FailureReason> failures = new ArrayList<FailureReason>();
  /**
   * ActivityPayloadURI
   * <p>
   * URI struct for activity payloads
   *
   */
  @JsonProperty("catalogUri")
  @JsonPropertyDescription("URI struct for activity payloads")
  private ActivityPayloadURI catalogUri;
  @JsonIgnore
  private Map<String, Object> additionalProperties = new HashMap<String, Object>();
  private final static long serialVersionUID = 6000475307128178670L;

  /**
   * StandardSyncSummary
   * <p>
   * standard information output by ALL sources for a sync step (our version of state.json) (Required)
   *
   */
  @JsonProperty("standardSyncSummary")
  public StandardSyncSummary getStandardSyncSummary() {
    return standardSyncSummary;
  }

  /**
   * StandardSyncSummary
   * <p>
   * standard information output by ALL sources for a sync step (our version of state.json) (Required)
   *
   */
  @JsonProperty("standardSyncSummary")
  public void setStandardSyncSummary(StandardSyncSummary standardSyncSummary) {
    this.standardSyncSummary = standardSyncSummary;
  }

  public StandardSyncOutput withStandardSyncSummary(StandardSyncSummary standardSyncSummary) {
    this.standardSyncSummary = standardSyncSummary;
    return this;
  }

  /**
   * WebhookOperationSummary
   * <p>
   * information output by syncs for which at least one webhook invocation step was performed
   *
   */
  @JsonProperty("webhookOperationSummary")
  public WebhookOperationSummary getWebhookOperationSummary() {
    return webhookOperationSummary;
  }

  /**
   * WebhookOperationSummary
   * <p>
   * information output by syncs for which at least one webhook invocation step was performed
   *
   */
  @JsonProperty("webhookOperationSummary")
  public void setWebhookOperationSummary(WebhookOperationSummary webhookOperationSummary) {
    this.webhookOperationSummary = webhookOperationSummary;
  }

  public StandardSyncOutput withWebhookOperationSummary(WebhookOperationSummary webhookOperationSummary) {
    this.webhookOperationSummary = webhookOperationSummary;
    return this;
  }

  @JsonProperty("failures")
  public List<FailureReason> getFailures() {
    return failures;
  }

  @JsonProperty("failures")
  public void setFailures(List<FailureReason> failures) {
    this.failures = failures;
  }

  public StandardSyncOutput withFailures(List<FailureReason> failures) {
    this.failures = failures;
    return this;
  }

  /**
   * ActivityPayloadURI
   * <p>
   * URI struct for activity payloads
   *
   */
  @JsonProperty("catalogUri")
  public ActivityPayloadURI getCatalogUri() {
    return catalogUri;
  }

  /**
   * ActivityPayloadURI
   * <p>
   * URI struct for activity payloads
   *
   */
  @JsonProperty("catalogUri")
  public void setCatalogUri(ActivityPayloadURI catalogUri) {
    this.catalogUri = catalogUri;
  }

  public StandardSyncOutput withCatalogUri(ActivityPayloadURI catalogUri) {
    this.catalogUri = catalogUri;
    return this;
  }

  @JsonAnyGetter
  public Map<String, Object> getAdditionalProperties() {
    return this.additionalProperties;
  }

  @JsonAnySetter
  public void setAdditionalProperty(String name, Object value) {
    this.additionalProperties.put(name, value);
  }

  public StandardSyncOutput withAdditionalProperty(String name, Object value) {
    this.additionalProperties.put(name, value);
    return this;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append(StandardSyncOutput.class.getName()).append('@').append(Integer.toHexString(System.identityHashCode(this))).append('[');
    sb.append("standardSyncSummary");
    sb.append('=');
    sb.append(((this.standardSyncSummary == null) ? "<null>" : this.standardSyncSummary));
    sb.append(',');
    sb.append("webhookOperationSummary");
    sb.append('=');
    sb.append(((this.webhookOperationSummary == null) ? "<null>" : this.webhookOperationSummary));
    sb.append(',');
    sb.append("failures");
    sb.append('=');
    sb.append(((this.failures == null) ? "<null>" : this.failures));
    sb.append(',');
    sb.append("catalogUri");
    sb.append('=');
    sb.append(((this.catalogUri == null) ? "<null>" : this.catalogUri));
    sb.append(',');
    sb.append("additionalProperties");
    sb.append('=');
    sb.append(((this.additionalProperties == null) ? "<null>" : this.additionalProperties));
    sb.append(',');
    if (sb.charAt((sb.length() - 1)) == ',') {
      sb.setCharAt((sb.length() - 1), ']');
    } else {
      sb.append(']');
    }
    return sb.toString();
  }

  @Override
  public int hashCode() {
    int result = 1;
    result = ((result * 31) + ((this.webhookOperationSummary == null) ? 0 : this.webhookOperationSummary.hashCode()));
    result = ((result * 31) + ((this.catalogUri == null) ? 0 : this.catalogUri.hashCode()));
    result = ((result * 31) + ((this.failures == null) ? 0 : this.failures.hashCode()));
    result = ((result * 31) + ((this.additionalProperties == null) ? 0 : this.additionalProperties.hashCode()));
    result = ((result * 31) + ((this.standardSyncSummary == null) ? 0 : this.standardSyncSummary.hashCode()));
    return result;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) {
      return true;
    }
    if ((other instanceof StandardSyncOutput) == false) {
      return false;
    }
    StandardSyncOutput rhs = ((StandardSyncOutput) other);
    return ((((((this.webhookOperationSummary == rhs.webhookOperationSummary)
        || ((this.webhookOperationSummary != null) && this.webhookOperationSummary.equals(rhs.webhookOperationSummary)))
        && ((this.catalogUri == rhs.catalogUri) || ((this.catalogUri != null) && this.catalogUri.equals(rhs.catalogUri))))
        && ((this.failures == rhs.failures) || ((this.failures != null) && this.failures.equals(rhs.failures))))
        && ((this.additionalProperties == rhs.additionalProperties)
            || ((this.additionalProperties != null) && this.additionalProperties.equals(rhs.additionalProperties))))
        && ((this.standardSyncSummary == rhs.standardSyncSummary)
            || ((this.standardSyncSummary != null) && this.standardSyncSummary.equals(rhs.standardSyncSummary))));
  }

}
