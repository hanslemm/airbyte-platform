/*
 * Copyright (c) 2020-2025 Airbyte, Inc., all rights reserved.
 */

package io.airbyte.config;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.databind.JsonNode;
import jakarta.annotation.Generated;
import java.io.Serializable;
import java.util.HashMap;
import java.util.Map;
import java.util.UUID;

/**
 * DeclarativeManifest
 * <p>
 * Declarative manifest to be passed to the source-declarative-manifest
 *
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
  "actorDefinitionId",
  "description",
  "manifest",
  "spec",
  "version",
  "componentsFileContent"
})
@Generated(value = "Generated by jsonSchema2Pojo")
public class DeclarativeManifest implements Serializable {

  /**
   *
   * (Required)
   *
   */
  @JsonProperty("actorDefinitionId")
  private UUID actorDefinitionId;
  /**
   *
   * (Required)
   *
   */
  @JsonProperty("description")
  private String description;
  /**
   *
   * (Required)
   *
   */
  @JsonProperty("manifest")
  private JsonNode manifest;
  /**
   *
   * (Required)
   *
   */
  @JsonProperty("spec")
  private JsonNode spec;
  /**
   *
   * (Required)
   *
   */
  @JsonProperty("version")
  private Long version;
  @JsonProperty("componentsFileContent")
  private String componentsFileContent;
  @JsonIgnore
  private Map<String, Object> additionalProperties = new HashMap<String, Object>();
  private final static long serialVersionUID = 5034203923459835762L;

  /**
   *
   * (Required)
   *
   */
  @JsonProperty("actorDefinitionId")
  public UUID getActorDefinitionId() {
    return actorDefinitionId;
  }

  /**
   *
   * (Required)
   *
   */
  @JsonProperty("actorDefinitionId")
  public void setActorDefinitionId(UUID actorDefinitionId) {
    this.actorDefinitionId = actorDefinitionId;
  }

  public DeclarativeManifest withActorDefinitionId(UUID actorDefinitionId) {
    this.actorDefinitionId = actorDefinitionId;
    return this;
  }

  /**
   *
   * (Required)
   *
   */
  @JsonProperty("description")
  public String getDescription() {
    return description;
  }

  /**
   *
   * (Required)
   *
   */
  @JsonProperty("description")
  public void setDescription(String description) {
    this.description = description;
  }

  public DeclarativeManifest withDescription(String description) {
    this.description = description;
    return this;
  }

  /**
   *
   * (Required)
   *
   */
  @JsonProperty("manifest")
  public JsonNode getManifest() {
    return manifest;
  }

  /**
   *
   * (Required)
   *
   */
  @JsonProperty("manifest")
  public void setManifest(JsonNode manifest) {
    this.manifest = manifest;
  }

  public DeclarativeManifest withManifest(JsonNode manifest) {
    this.manifest = manifest;
    return this;
  }

  /**
   *
   * (Required)
   *
   */
  @JsonProperty("spec")
  public JsonNode getSpec() {
    return spec;
  }

  /**
   *
   * (Required)
   *
   */
  @JsonProperty("spec")
  public void setSpec(JsonNode spec) {
    this.spec = spec;
  }

  public DeclarativeManifest withSpec(JsonNode spec) {
    this.spec = spec;
    return this;
  }

  /**
   *
   * (Required)
   *
   */
  @JsonProperty("version")
  public Long getVersion() {
    return version;
  }

  /**
   *
   * (Required)
   *
   */
  @JsonProperty("version")
  public void setVersion(Long version) {
    this.version = version;
  }

  public DeclarativeManifest withVersion(Long version) {
    this.version = version;
    return this;
  }

  @JsonProperty("componentsFileContent")
  public String getComponentsFileContent() {
    return componentsFileContent;
  }

  @JsonProperty("componentsFileContent")
  public void setComponentsFileContent(String componentsFileContent) {
    this.componentsFileContent = componentsFileContent;
  }

  public DeclarativeManifest withComponentsFileContent(String componentsFileContent) {
    this.componentsFileContent = componentsFileContent;
    return this;
  }

  @JsonAnyGetter
  public Map<String, Object> getAdditionalProperties() {
    return this.additionalProperties;
  }

  @JsonAnySetter
  public void setAdditionalProperty(String name, Object value) {
    this.additionalProperties.put(name, value);
  }

  public DeclarativeManifest withAdditionalProperty(String name, Object value) {
    this.additionalProperties.put(name, value);
    return this;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append(DeclarativeManifest.class.getName()).append('@').append(Integer.toHexString(System.identityHashCode(this))).append('[');
    sb.append("actorDefinitionId");
    sb.append('=');
    sb.append(((this.actorDefinitionId == null) ? "<null>" : this.actorDefinitionId));
    sb.append(',');
    sb.append("description");
    sb.append('=');
    sb.append(((this.description == null) ? "<null>" : this.description));
    sb.append(',');
    sb.append("manifest");
    sb.append('=');
    sb.append(((this.manifest == null) ? "<null>" : this.manifest));
    sb.append(',');
    sb.append("spec");
    sb.append('=');
    sb.append(((this.spec == null) ? "<null>" : this.spec));
    sb.append(',');
    sb.append("version");
    sb.append('=');
    sb.append(((this.version == null) ? "<null>" : this.version));
    sb.append(',');
    sb.append("componentsFileContent");
    sb.append('=');
    sb.append(((this.componentsFileContent == null) ? "<null>" : this.componentsFileContent));
    sb.append(',');
    sb.append("additionalProperties");
    sb.append('=');
    sb.append(((this.additionalProperties == null) ? "<null>" : this.additionalProperties));
    sb.append(',');
    if (sb.charAt((sb.length() - 1)) == ',') {
      sb.setCharAt((sb.length() - 1), ']');
    } else {
      sb.append(']');
    }
    return sb.toString();
  }

  @Override
  public int hashCode() {
    int result = 1;
    result = ((result * 31) + ((this.actorDefinitionId == null) ? 0 : this.actorDefinitionId.hashCode()));
    result = ((result * 31) + ((this.manifest == null) ? 0 : this.manifest.hashCode()));
    result = ((result * 31) + ((this.description == null) ? 0 : this.description.hashCode()));
    result = ((result * 31) + ((this.componentsFileContent == null) ? 0 : this.componentsFileContent.hashCode()));
    result = ((result * 31) + ((this.additionalProperties == null) ? 0 : this.additionalProperties.hashCode()));
    result = ((result * 31) + ((this.version == null) ? 0 : this.version.hashCode()));
    result = ((result * 31) + ((this.spec == null) ? 0 : this.spec.hashCode()));
    return result;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) {
      return true;
    }
    if ((other instanceof DeclarativeManifest) == false) {
      return false;
    }
    DeclarativeManifest rhs = ((DeclarativeManifest) other);
    return ((((((((this.actorDefinitionId == rhs.actorDefinitionId)
        || ((this.actorDefinitionId != null) && this.actorDefinitionId.equals(rhs.actorDefinitionId)))
        && ((this.manifest == rhs.manifest) || ((this.manifest != null) && this.manifest.equals(rhs.manifest))))
        && ((this.description == rhs.description) || ((this.description != null) && this.description.equals(rhs.description))))
        && ((this.componentsFileContent == rhs.componentsFileContent)
            || ((this.componentsFileContent != null) && this.componentsFileContent.equals(rhs.componentsFileContent))))
        && ((this.additionalProperties == rhs.additionalProperties)
            || ((this.additionalProperties != null) && this.additionalProperties.equals(rhs.additionalProperties))))
        && ((this.version == rhs.version) || ((this.version != null) && this.version.equals(rhs.version))))
        && ((this.spec == rhs.spec) || ((this.spec != null) && this.spec.equals(rhs.spec))));
  }

}
