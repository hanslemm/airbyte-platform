/*
 * Copyright (c) 2020-2025 Airbyte, Inc., all rights reserved.
 */

package io.airbyte.config;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.annotation.Generated;
import java.io.Serializable;
import java.util.UUID;

/**
 * Tag
 * <p>
 * Tag for organizing and grouping resources
 *
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
  "tagId",
  "workspaceId",
  "name",
  "color"
})
@Generated(value = "Generated by jsonSchema2Pojo")
public class Tag implements Serializable {

  /**
   *
   * (Required)
   *
   */
  @JsonProperty("tagId")
  private UUID tagId;
  /**
   *
   * (Required)
   *
   */
  @JsonProperty("workspaceId")
  private UUID workspaceId;
  /**
   *
   * (Required)
   *
   */
  @JsonProperty("name")
  private String name;
  /**
   *
   * (Required)
   *
   */
  @JsonProperty("color")
  private String color;
  private final static long serialVersionUID = -9200340007216467538L;

  /**
   *
   * (Required)
   *
   */
  @JsonProperty("tagId")
  public UUID getTagId() {
    return tagId;
  }

  /**
   *
   * (Required)
   *
   */
  @JsonProperty("tagId")
  public void setTagId(UUID tagId) {
    this.tagId = tagId;
  }

  public Tag withTagId(UUID tagId) {
    this.tagId = tagId;
    return this;
  }

  /**
   *
   * (Required)
   *
   */
  @JsonProperty("workspaceId")
  public UUID getWorkspaceId() {
    return workspaceId;
  }

  /**
   *
   * (Required)
   *
   */
  @JsonProperty("workspaceId")
  public void setWorkspaceId(UUID workspaceId) {
    this.workspaceId = workspaceId;
  }

  public Tag withWorkspaceId(UUID workspaceId) {
    this.workspaceId = workspaceId;
    return this;
  }

  /**
   *
   * (Required)
   *
   */
  @JsonProperty("name")
  public String getName() {
    return name;
  }

  /**
   *
   * (Required)
   *
   */
  @JsonProperty("name")
  public void setName(String name) {
    this.name = name;
  }

  public Tag withName(String name) {
    this.name = name;
    return this;
  }

  /**
   *
   * (Required)
   *
   */
  @JsonProperty("color")
  public String getColor() {
    return color;
  }

  /**
   *
   * (Required)
   *
   */
  @JsonProperty("color")
  public void setColor(String color) {
    this.color = color;
  }

  public Tag withColor(String color) {
    this.color = color;
    return this;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append(Tag.class.getName()).append('@').append(Integer.toHexString(System.identityHashCode(this))).append('[');
    sb.append("tagId");
    sb.append('=');
    sb.append(((this.tagId == null) ? "<null>" : this.tagId));
    sb.append(',');
    sb.append("workspaceId");
    sb.append('=');
    sb.append(((this.workspaceId == null) ? "<null>" : this.workspaceId));
    sb.append(',');
    sb.append("name");
    sb.append('=');
    sb.append(((this.name == null) ? "<null>" : this.name));
    sb.append(',');
    sb.append("color");
    sb.append('=');
    sb.append(((this.color == null) ? "<null>" : this.color));
    sb.append(',');
    if (sb.charAt((sb.length() - 1)) == ',') {
      sb.setCharAt((sb.length() - 1), ']');
    } else {
      sb.append(']');
    }
    return sb.toString();
  }

  @Override
  public int hashCode() {
    int result = 1;
    result = ((result * 31) + ((this.name == null) ? 0 : this.name.hashCode()));
    result = ((result * 31) + ((this.color == null) ? 0 : this.color.hashCode()));
    result = ((result * 31) + ((this.tagId == null) ? 0 : this.tagId.hashCode()));
    result = ((result * 31) + ((this.workspaceId == null) ? 0 : this.workspaceId.hashCode()));
    return result;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) {
      return true;
    }
    if ((other instanceof Tag) == false) {
      return false;
    }
    Tag rhs = ((Tag) other);
    return (((((this.name == rhs.name) || ((this.name != null) && this.name.equals(rhs.name)))
        && ((this.color == rhs.color) || ((this.color != null) && this.color.equals(rhs.color))))
        && ((this.tagId == rhs.tagId) || ((this.tagId != null) && this.tagId.equals(rhs.tagId))))
        && ((this.workspaceId == rhs.workspaceId) || ((this.workspaceId != null) && this.workspaceId.equals(rhs.workspaceId))));
  }

}
